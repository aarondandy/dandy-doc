@using DandyDoc.SimpleModels.Contracts;
@using DandyDocSite.Infrastructure
@model IEnumerable<ISimpleModel>
@functions{
	public static bool IsForSummary(IFlairTag flair){
		if (null == flair)
			return false;
		if ("public".Equals(flair.IconId, StringComparison.OrdinalIgnoreCase))
			return false;
				if ("operator".Equals(flair.IconId, StringComparison.OrdinalIgnoreCase))
			return false;
		return true;
	}
}
@{
	var linkResolver = (ViewBag.ApiDocLinkResolver as ApiDocLinkResolver)
		?? new ApiDocLinkResolver { UrlHelper = Url };	
}
<table class="table table-bordered">
	<thead><tr><th><i class="icon-info-sign"></i></th><th>Name</th><th>Description</th></tr></thead>
	<tbody>
		@foreach (var member in Model) {
		<tr>
			<td>@{foreach (var flair in member.FlairTags.Where(IsForSummary)) { Html.RenderPartial("DandyDoc/Partials/FlairIcon", flair); }}</td>
			<td><a href="@linkResolver.GetUrl(member.CRef)">@member.ShortName</a></td>
			<td>
				@if (member.HasSummary){
					Html.RenderPartial("DandyDoc/Partials/ComplexTextRender", member.Summary);
				}
			</td>
		</tr>
		}
	</tbody>
</table>