@model DandyDoc.SimpleModels.ComplexText.DescriptionListComplexText
@{
	string listHtmlType;
	if (String.IsNullOrEmpty(Model.ListType) || "BULLET".Equals(Model.ListType, StringComparison.OrdinalIgnoreCase)){
		listHtmlType = "ul";
	}
	else if ("NUMBER".Equals(Model.ListType, StringComparison.OrdinalIgnoreCase)){
		listHtmlType = "ol";
	}
	else{
		listHtmlType = null;
	}
}
@if (!String.IsNullOrEmpty(listHtmlType)){
	@Html.Raw('<' + listHtmlType + '>')
	foreach (var row in Model.Children){
			var term = row.Term;
			var description = row.Description;
			if (null == term && null == description) {
				continue;
			}
<li>
	<dl>
	@if (null != term) {
		<dt>@{Html.RenderPartial("DandyDoc/Partials/ComplexTextRender", term);}</dt>
	}
	@if (null != description) {
		<dd>@{Html.RenderPartial("DandyDoc/Partials/ComplexTextRender", description);}</dd>
	}
	</dl>
</li>
	}
	@Html.Raw("</" + listHtmlType + '>');
}
else {
<table class="table table-bordered table-condensed">
	@foreach (var row in Model.Children){
		var term = row.Term;
		var description = row.Description;
		if (null == term && null == description){
			continue;
		}
		var cellTag = row.IsHeader ? "th" : "td";
		var cellStartTag = String.Concat('<', cellTag, '>');
		var cellEndTag = String.Concat("</", cellTag, '>');
		var rowStart = row.IsHeader ? "<thead><tr>" : "<tr>";
		var rowEnd = row.IsHeader ? "</tr></thead>" : "</tr>";
		
		@Html.Raw(rowStart + cellStartTag)
		if (null != term) { Html.RenderPartial("DandyDoc/Partials/ComplexTextRender", term); }
		@Html.Raw(cellEndTag + cellStartTag)
		if (null != description) { Html.RenderPartial("DandyDoc/Partials/ComplexTextRender", description); }
		@Html.Raw(cellEndTag + rowEnd)
	}
</table>
}