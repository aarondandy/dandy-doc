@using DandyDoc.CodeDoc
@using DandyDoc.Web.Mvc4.Helpers
@model ICodeDocNamespace
@{
  Layout = "./_Layout.cshtml";
  var regularTypes = new List<ICodeDocEntity>();
  var delegateTypes = new List<ICodeDocEntity>();
  foreach (var type in Model.Types) {
    if ("DELEGATE".Equals(type.SubTitle, StringComparison.OrdinalIgnoreCase)) {
      delegateTypes.Add(type);
    }
    else {
      regularTypes.Add(type);
    }
  }
  var memberSets = new[]{
    new { Title = "Types", Types = regularTypes},
    new { Title = "Delegates", Types = delegateTypes}
  };
}
@if(Model.Assemblies.Count > 0){
  <section>
    @if(Model.Assemblies.Count == 1){
      <div>Assembly: @Html.ActionLinkFull(Model.Assemblies[0])</div>
    }else{
      <div>Assemblies: @Html.ActionLinkList(Model.Assemblies, new{@class="inline"})</div>
    }
  </section>
}
@foreach (var memberSet in memberSets.Where(x => x.Types.Count > 0)) {
  <section>
    <h2>@memberSet.Title</h2>
    @Html.CodeDocEntityTable(memberSet.Types, new {@class="table table-bordered"})
  </section>
}