@using DandyDoc.CodeDoc
@using DandyDoc.Web.ServiceStack
@inherits ServiceStack.Razor.ViewPage<CodeDocSimpleMember>
@{
  Layout = "_DocsLayout";
  var entityTitle = Model.Title;
  var entitySubTitle = Model.SubTitle;
  var contentModel = Model as CodeDocMemberContentBase;
  ViewBag.SubTitle = "API Reference";
}
<div class="container">
  <div class="row">
    <section class="span12">
      <h2>
        @Html.BreakIntoCodeNamePartElements(entityTitle)
        @if (!String.IsNullOrWhiteSpace(entitySubTitle)) {
          <small>@entitySubTitle</small>
        }
      </h2>
      
      @if (Model.HasSummaryContents) {
        <p class="lead">@this.XmlDocHtml(Model.SummaryContents)</p>
      }
      
      <div>TODO: flair table</div>
      
      @if (contentModel != null) {
        
        if (contentModel.Namespace != null) {
          <div>Namespace: TODO namespace link</div>
        }
        
        if (contentModel.Assembly != null) {
          var assemblyText = contentModel.Assembly.AssemblyFileName;
          if (String.IsNullOrWhiteSpace(assemblyText)) {
            assemblyText = contentModel.Assembly.Title;
          }
          if (!String.IsNullOrWhiteSpace(assemblyText)) {
            <div>Assembly: @assemblyText</div>
          }
        }
        
        if (contentModel.DeclaringType != null) {
          <div>Declaring Type: TODO type link</div>
        }
        
      }

      @RenderBody()
      
      @if (contentModel != null) {
        
        if (contentModel.HasRemarks) {
          <section>
            <h2>Remarks</h2>
            @foreach (var section in contentModel.Remarks.Where(x => x.HasChildren)) {
              <div>
                @this.XmlDocHtml(section.Children)
              </div>
            }
          </section>
        }
        
        if (contentModel.HasExamples) {
          <section>
            <h2>Examples</h2>
            @foreach (var section in contentModel.Examples.Where(x => x.HasChildren)) {
              <div>
                @this.XmlDocHtml(section.Children)
              </div>
            }
          </section>
        }

        if (contentModel.HasSeeAlso) {
          <section>
            <h2>See Also</h2>
            <ul>
              @foreach (var section in contentModel.SeeAlso) {
                <li>
                  TODO: XML DOC link
                </li>
              }
            </ul>
          </section>
        }
        
      }
      
      @{
        var uriString = new UriBuilder("https://github.com/aarondandy/dandy-doc/issues/new") {
          Query = String.Format("title=[docs]:+{0}&body=CRef:+{0}", Uri.EscapeDataString(Model.CRef.ToString()))
        }.ToString();
        <div class="muted pull-right"><a href="@uriString" target="_blank" title="Report an issue with this documentation." rel="nofollow"><i class="icon-exclamation-sign"></i></a></div>
      }

    </section>
  </div>
</div>