@using DandyDoc.ViewModels
@using Mvc4WebDirectDocSample.Infrastructure
@model IEnumerable<TypeReferenceViewModel>
@functions{

	private string GetLink(TypeReferenceViewModel referenceViewModel){
		var linkResolver = ViewBag.TypeDefinitionLinkResolver as TypeDefinitionLinkResolver;
		return null == linkResolver ? null : linkResolver.GetLink(referenceViewModel.Definition);
	}
	
	private IHtmlString GetItemContent(TypeReferenceViewModel reference){
		if (null == reference)
			return null;
		var coreText = HttpUtility.HtmlEncode(reference.ShortName);
		var ns = reference.Reference.Namespace;
		if(!String.IsNullOrEmpty(ns)){
			coreText = String.Concat("<small>", ns, ".</small>", coreText);
		}

		var link = GetLink(reference);
		if (!String.IsNullOrEmpty(link)){
			coreText = String.Concat("<a href=\"", link, "\">",coreText,"</a>");
		}
		return Html.Raw(coreText);
	}

}
<ul class="unstyled">@foreach (var b in Model) {
	<li style="text-indent: -7px;">@GetItemContent(b)</li>
}</ul>
