@model DandyDoc.ViewModels.MemberFlair
@functions{
	protected static Dictionary<string,string> SimpleIconClasses = new Dictionary<string, string> {
		{"protected", "icon-eye-close"},
		{"public","icon-eye-open"},
		{"hidden","icon-ban-circle"},
		{"pure","icon-leaf"},
		{"static","icon-globe"},
		{"extension","icon-resize-full"},
		{"no nulls","icon-ok-sign"},
		{"null result","icon-remove-sign"},
		{"flags","icon-flag"},
		{"operator","icon-plus"},
		{"sealed","icon-lock"},
		{"virtual","icon-circle-arrow-down"},
		{"abstract","icon-edit"},
		{"obsolete","icon-warning-sign"}
	};
}
@if (SimpleIconClasses.ContainsKey(Model.Id)) {<i class="@SimpleIconClasses[Model.Id] flair-icon" title="@Model.Id"></i>}
else if("GET".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)){<code class="flair-icon" title="getter">get</code>}
else if ("SET".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)) {<code class="flair-icon" title="setter">set</code>}
else if("PROGET".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)){<code class="flair-icon" title="protected getter"><i class="icon-eye-close"></i>get</code>}
else if ("PROSET".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)) {<code class="flair-icon" title="protected setter"><i class="icon-eye-close"></i>set</code>}
else if ("INDEXER".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)){<code class="flair-icon" title="indexer">[]</code>}
else if ("CONSTANT".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)){<code class="flair-icon" title="constant">42</code>}
else if ("READONLY".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)){<code class="flair-icon" title="readonly">get</code>}
else if ("STRING FORMAT".Equals(Model.Id, StringComparison.OrdinalIgnoreCase)){<code class="flair-icon" title="string format">{0}</code>}
else {@(Model.Id)}